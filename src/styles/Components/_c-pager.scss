@charset "utf-8";

@use 'sass:map';
@use 'sass:math';
@use '../Foundation/variables' as *;
@use '../Foundation/mixin' as *;
@use '../Foundation/functions' as *;

.c-pager {
  $h-md: rem(35);
  $w-md: rem(35);
  $h-sm: rem(35);
  $w-sm: rem(35);

  display: flex;
  gap: rem(5);
  align-items: center;
  justify-content: center;

  .text {
    @include fz(18, 18, 500);

    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: $w-md;
    min-width: $w-md;
    height: $h-md;
    color: var(--color-black);
    border: 1px solid currentcolor;

    @include mqw-down {
      @include fz(16);

      width: $w-sm;
      min-width: $w-sm;
      height: $h-sm;
    }

    &.is-current {
      color: var(--color-white);
      background-color: var(--color-primary);
      border-color: var(--color-primary);
    }

    @include canhover {
      transition: color $com-ms $com-es;

      &:hover:not(.is-current) {
        color: var(--color-primary);
      }
    }
  }

  .arrow {
    @include hover-opacity;

    position: relative;
    display: flex;
    flex-shrink: 0;
    align-items: center;
    justify-content: center;
    width: $w-md;
    height: $h-md;

    @include mqw-down {
      width: $w-sm;
      height: $h-sm;
    }

    svg path {
      transition: fill $com-ms $com-es;
    }

    &.is-disabled {
      pointer-events: none;
      visibility: hidden;
    }

    &.single svg {
      width: rem(5.97);
      height: rem(10);
    }

    &.double svg {
      width: rem(9.97);
      height: rem(10);
    }

    &.first {
      svg {
        transform: scale(-1, 1);
      }
    }

    &.prev {
      margin-right: rem(20);

      svg {
        transform: scale(-1, 1);
      }
    }

    &.next {
      margin-left: rem(20);
    }
  }
}
